at com.lenovo.qa.support.services.MqttBrokerClient.waitForMessage(MqttBrokerClient.groovy:97),"['SMOKE: Verify that Wifi Auto & Hidden toggles can be configured', 'SMOKE: Verify that logging level can be updated', 'SMOKE: Verify that WiFi Configuration Type and other fields could be changed', 'SMOKE: Verify that logging level can be updated', 'Verify that WiFi security and Password fields could be changed', 'SMOKE: Verify that Wifi Auto & Hidden toggles can be configured', 'SMOKE: Verify that logging level can be updated', 'SMOKE: Verify that toggles can be set', 'Verify that WiFi security and Password fields could be changed', 'Verify that WiFi security and Password fields could be changed', 'SMOKE: Verify that WiFi Configuration Type and other fields could be changed', 'Verify that WiFi security and Password fields could be changed', 'Verify that WiFi security and Password fields could be changed', 'SMOKE: Verify that toggles can be set', 'SMOKE: Verify that On-screen Language can be updated', 'SMOKE: Verify that Wifi Auto & Hidden toggles can be configured', 'SMOKE: Verify that WiFi Configuration Type and other fields could be changed', 'SMOKE: Verify that Developer mode can be updated']",18,
at java.base/java.lang.Thread.run(Thread.java:834),"['Verify that device_subscription can be created', 'Portal is unable to update values for udc-vr-config with wrong field values', 'User is able to invite other users to homegroup', 'Portal is unable to update values for udc-vr-config with wrong field values', 'Portal is unable to update values for udc-vr-config with wrong field values', 'SMOKE: New version of recommended content is replaced the previous on the device ', 'SMOKE: Commercial user can link FREE organization to RRP customer', 'Portal is unable to update values for udc-vr-config with wrong field values', 'SMOKE: MP device can call home with sign', 'Verify happy pass validation for Pico device onboarding flow without call home', 'Portal is unable to update values for udc-vr-config with wrong field values', 'Portal is unable to update values for udc-vr-config with wrong field values', 'SMOKE: MP device can call home with call home token', 'SMOKE: Generate PIN for a PIN policy']",14,different cases with some invalid response
at com.lenovo.qa.api.core.smoke.accountManagement.EmailNotificationsFunctionalTestingSpec.SMOKE: Verify invitation email for different users on different organizations(EmailNotificationsFunctionalTestingSpec.groovy:75),"['SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations', 'SMOKE: Verify invitation email for different users on different organizations']",9,
at com.lenovo.qa.api.thinkShield.regression.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.Verify device status mapping after call home request(DeviceManagementServiceIntegrationTestingSpec.groovy:485),"['Verify device status mapping after call home request', 'Verify device status mapping after call home request', 'Verify device status mapping after call home request', 'Verify device status mapping after call home request', 'Verify device status mapping after call home request', 'Verify device status mapping after call home request']",6,
at com.lenovo.qa.api.core.smoke.accountManagement.UserServiceFunctionalTestingSpec.SMOKE: Verify that subscription admins can not do operations on LCPRealm users(UserServiceFunctionalTestingSpec.groovy:1026),"['SMOKE: Verify that subscription admins can not do operations on LCPRealm users', 'SMOKE: Verify that subscription admins can not do operations on LCPRealm users', 'SMOKE: Verify that subscription admins can not do operations on LCPRealm users', 'SMOKE: Verify that subscription admins can not do operations on LCPRealm users', 'SMOKE: Verify that subscription admins can not do operations on LCPRealm users']",5,
at com.lenovo.qa.api.core.smoke.accountManagement.UserGroupSpec.SMOKE: Verify that user can be associated to groups(UserGroupSpec.groovy:220),"['SMOKE: Verify that user can be associated to groups', 'SMOKE: Verify that user can be associated to groups', 'SMOKE: Verify that user can be associated to groups', 'SMOKE: Verify that user can be associated to groups']",4,
at com.lenovo.qa.api.core.smoke.contentManagementService.ContentManagementServiceSpec.SMOKE: Get documents and media by id(ContentManagementServiceSpec.groovy:134),"['SMOKE: Get documents and media by id', 'SMOKE: Get documents and media by id', 'SMOKE: Get documents and media by id', 'SMOKE: Get documents and media by id']",4,
at com.lenovo.qa.api.core.smoke.accountManagement.UserGroupSpec.SMOKE: Verify that multiple users can be associated to different groups at a time(UserGroupSpec.groovy:301),"['SMOKE: Verify that multiple users can be associated to different groups at a time', 'SMOKE: Verify that multiple users can be associated to different groups at a time', 'SMOKE: Verify that multiple users can be associated to different groups at a time', 'SMOKE: Verify that multiple users can be associated to different groups at a time']",4,
at com.lenovo.qa.api.core.regression.accountManagement.LdapIdentityProvidersSpec.Verify that LDAP identity provider can NOT be created for organization type other than federated-ldap(LdapIdentityProvidersSpec.groovy:70),"['Verify that LDAP identity provider can NOT be created for organization type other than federated-ldap', 'Verify that LDAP identity provider can NOT be created for organization type other than federated-ldap', 'Verify that LDAP identity provider can NOT be created for organization type other than federated-ldap']",3,
at com.lenovo.qa.support.helpers.utils.Utils.waitFor(Utils.groovy:225),"['SMOKE: Verify that Developer mode can be updated', 'SMOKE: System image with permissions can be added to the portal', 'SMOKE: Actions for transfer licences are logged in activity log']",3,
at com.lenovo.qa.api.core.regression.accountManagement.DeviceGroupSpec.Verify that device can be associated to multiple groups which are sorted(DeviceGroupSpec.groovy:483),"['Verify that device can be associated to multiple groups which are sorted', 'Verify that device can be associated to multiple groups which are sorted', 'Verify that device can be associated to multiple groups which are sorted']",3,
at com.lenovo.qa.api.core.regression.accountManagement.OrganizationServiceFunctionalTestingSpec.Verify that demo organization can NOT be created with an invalid value for isDemoOrganization(OrganizationServiceFunctionalTestingSpec.groovy:1502),"['Verify that demo organization can NOT be created with an invalid value for isDemoOrganization', 'Verify that demo organization can NOT be created with an invalid value for isDemoOrganization', 'Verify that demo organization can NOT be created with an invalid value for isDemoOrganization']",3,
at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:823),"['Verify that installer Common Configuration File can be updated', 'SMOKE: Call device status service with X509 certificate', 'User is not able to create second homegroup']",3,
at com.lenovo.qa.api.core.regression.accountManagement.DeviceGroupSpec.Verify that device can be associated to multiple groups at a time(DeviceGroupSpec.groovy:437),"['Verify that device can be associated to multiple groups at a time', 'Verify that device can be associated to multiple groups at a time', 'Verify that device can be associated to multiple groups at a time']",3,
at com.lenovo.qa.api.core.regression.accountManagement.ClientSpec.Verify that S2S communication client can not be created with invalid format of redirectUris(ClientSpec.groovy:361),"['Verify that S2S communication client can not be created with invalid format of redirectUris', 'Verify that S2S communication client can not be created with invalid format of redirectUris', 'Verify that S2S communication client can not be created with invalid format of redirectUris']",3,
at org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run(CommsReceiver.java:133),"['Verify device is able to download file from MQTT command message', 'SMOKE: User can retrieve all devices with specified package', 'SMOKE: User can retrieve download progress per package for given devices']",3,
at com.lenovo.qa.api.core.regression.accountManagement.DeviceGroupSpec.Verify that multiple devices can be associated to multiple groups at a time(DeviceGroupSpec.groovy:513),"['Verify that multiple devices can be associated to multiple groups at a time', 'Verify that multiple devices can be associated to multiple groups at a time', 'Verify that multiple devices can be associated to multiple groups at a time']",3,
at com.lenovo.qa.api.core.regression.accountManagement.MSOrgCreationSpec.Existed org updating with list of subscription ids from different solutions(MSOrgCreationSpec.groovy:58),"['Existed org updating with list of subscription ids from different solutions', 'Existed org updating with list of subscription ids from different solutions', 'Existed org updating with list of subscription ids from different solutions']",3,
at com.lenovo.qa.api.vrClassroom.smoke.SystemImageSpec.SMOKE: System images are installed only to suitable organizations(SystemImageSpec.groovy:74),"['SMOKE: System images are installed only to suitable organizations', 'SMOKE: System images are installed only to suitable organizations']",2,
at com.lenovo.qa.support.helpers.utils.Utils.compareMaps(Utils.groovy:90),"['SMOKE: Add configuration section for ARCast', 'SMOKE: Verify that user can update option on org level']",2,
at com.lenovo.qa.api.vrClassroom.regression.permissionService.PermissionServiceSpec.Verify that user can get org groups info(PermissionServiceSpec.groovy:52),"['Verify that user can get org groups info', 'Verify that user can get org groups info']",2,
at com.lenovo.qa.api.thinkShield.regression.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.Verify device status mapping after call home request with token(DeviceManagementServiceIntegrationTestingSpec.groovy:534),"['Verify device status mapping after call home request with token', 'Verify device status mapping after call home request with token']",2,
Caused by: java.lang.NullPointerException: Cannot get property 'subscriptionUserRoles' on null object,"['SMOKE: De-assigning additional org admin from ms org', 'SMOKE: Adding additional org admin to ms org']",2,
at com.lenovo.qa.api.lenovoDeviceIntelegence.regression.ticketingService.TicketsSpec.Verify that ticket can NOT be created with missing required field(TicketsSpec.groovy:73),"['Verify that ticket can NOT be created with missing required field', 'Verify that ticket can NOT be created with missing required field']",2,
at com.lenovo.qa.api.vrClassroom.regression.permissionService.PermissionServiceSpec.Verify that user isn't able to create group(PermissionServiceSpec.groovy:20),"[""Verify that user isn't able to create group"", ""Verify that user isn't able to create group""]",2,
at com.lenovo.qa.api.lenovoPC.security.ppsService.securityMisconfigurations.PPSServiceInformationLeaksVerificationSpec.Verify that responses don't contain sensitive data(PPSServiceInformationLeaksVerificationSpec.groovy:20),"[""Verify that responses don't contain sensitive data"", ""Verify that responses don't contain sensitive data""]",2,
at com.lenovo.qa.api.vrClassroom.regression.permissionService.PermissionServiceSpec.Verify that user isn't able to assign and unassign org to org group(PermissionServiceSpec.groovy:110),"[""Verify that user isn't able to assign and unassign org to org group"", ""Verify that user isn't able to assign and unassign org to org group""]",2,
at com.lenovo.qa.api.lenovoDeviceIntelegence.regression.ticketingService.TicketsSpec.Verify that ticket can NOT be created with null required field(TicketsSpec.groovy:33),"['Verify that ticket can NOT be created with null required field', 'Verify that ticket can NOT be created with null required field']",2,
at com.lenovo.qa.api.core.regression.accountManagement.OrganizationServiceFunctionalTestingSpec.Verify that demo organization can NOT be created with an invalid value for expiryDate(OrganizationServiceFunctionalTestingSpec.groovy:1467),"['Verify that demo organization can NOT be created with an invalid value for expiryDate', 'Verify that demo organization can NOT be created with an invalid value for expiryDate']",2,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.uipermissionService.LenovoMSPOrganizationUIPermissionSpec.Verify user has correct permissions(LenovoMSPOrganizationUIPermissionSpec.groovy:22),"['Verify user has correct permissions', 'Verify user has correct permissions']",2,
at com.lenovo.qa.api.vrClassroom.regression.permissionService.PermissionServiceSpec.Verify that user isn't able to delete(PermissionServiceSpec.groovy:81),"[""Verify that user isn't able to delete"", ""Verify that user isn't able to delete""]",2,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.reccuringRevenueProxy.MSPOrganizationLicenceTransferSpec.SMOKE: Verify that MSP tech gets notification during licence transferring to Managed org(MSPOrganizationLicenceTransferSpec.groovy:183),['SMOKE: Verify that MSP tech gets notification during licence transferring to Managed org'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Assign/un-assign a scoped role to/from a role(PermissionServiceSpec.groovy:275),['SMOKE: Assign/un-assign a scoped role to/from a role'],1,
at com.lenovo.qa.api.vrClassroom.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: User is able to bulk assign/unassign Users to Device(DeviceManagementServiceIntegrationTestingSpec.groovy:547),['SMOKE: User is able to bulk assign/unassign Users to Device'],1,
at com.lenovo.qa.api.thinkShield.regression.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.Verify that device public key can be updated(DeviceManagementServiceIntegrationTestingSpec.groovy:351),['Verify that device public key can be updated'],1,
at com.lenovo.qa.api.lenovoPC.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: Part numbers can be bulk edited (DeviceManagementServiceIntegrationTestingSpec.groovy:116),['SMOKE: Part numbers can be bulk edited '],1,
at com.lenovo.qa.api.vrClassroom.smoke.partnerContent.PartnerContentSpec.SMOKE: Verify device compatibility for featured applications(PartnerContentSpec.groovy:778),['SMOKE: Verify device compatibility for featured applications'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.deviceProfile.MSPOrganizationDeviceProfileSpec.SMOKE: Verify MSP tech and admin able to retrieve correct device list with x-cross-tenant = true (MSPOrganizationDeviceProfileSpec.groovy:39),['SMOKE: Verify MSP tech and admin able to retrieve correct device list with x-cross-tenant = true '],1,
at com.lenovo.qa.api.vrClassroom.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: User is able to bulk assign Users to Devices by orgDeviceId or deviceId(DeviceManagementServiceIntegrationTestingSpec.groovy:584),['SMOKE: User is able to bulk assign Users to Devices by orgDeviceId or deviceId'],1,
at com.lenovo.qa.api.thinkShield.workflow.UDSIntegrationWithIBaseAndIPSSpec.Check UDS integration with iBase/IPS(UDSIntegrationWithIBaseAndIPSSpec.groovy:20),['Check UDS integration with iBase/IPS'],1,
at com.lenovo.qa.api.core.smoke.fileStorage.FileStorageSpec.setupSpec(FileStorageSpec.groovy:247),['FileStorageSpec SETUP_SPEC'],1,
at com.lenovo.qa.api.lenovoPC.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: User is able to bulk claim MP devices(DeviceManagementServiceIntegrationTestingSpec.groovy:62),['SMOKE: User is able to bulk claim MP devices'],1,
at com.lenovo.qa.support.services.mtls.MtlsConfigurationClient.getConfiguration(MtlsConfigurationClient.groovy:14),['SMOKE: X509 certificate for re-created device on the same org'],1,
at com.lenovo.qa.api.core.demoSolution.DemoSolutionSpec.Verify that Org Admin can manage devices and apps(DemoSolutionSpec.groovy:90),['Verify that Org Admin can manage devices and apps'],1,
at com.lenovo.qa.api.core.smoke.emailService.EmailServiceSmokeSpec.Verify email templates can be listed(EmailServiceSmokeSpec.groovy:228),['Verify email templates can be listed'],1,
at com.lenovo.qa.api.thinkReality.smoke.applicationManagement.SystemImageSpec.SMOKE: System image can be republished and modify list of selected organizations(SystemImageSpec.groovy:62),['SMOKE: System image can be republished and modify list of selected organizations'],1,
at com.lenovo.qa.api.core.regression.accountManagement.UserServiceFunctionalTestingSpec.Verify that forgot domain is sending valid orgId to user email(UserServiceFunctionalTestingSpec.groovy:1212),['Verify that forgot domain is sending valid orgId to user email'],1,
at com.lenovo.qa.api.core.regression.accountManagement.ClientSpec.Verify that S2S communication client cannot perform unassigned operations(ClientSpec.groovy:508),['Verify that S2S communication client cannot perform unassigned operations'],1,
at com.lenovo.qa.api.thinkReality.smoke.configurationService.DeviceConfigServiceSpec.SMOKE: Verify Kiosk mode (DeviceConfigServiceSpec.groovy:1446),['SMOKE: Verify Kiosk mode '],1,
at com.lenovo.qa.api.core.regression.accountManagement.UserServiceFunctionalTestingSpec.Verify user is not able to update his own email on his profile(UserServiceFunctionalTestingSpec.groovy:1396),['Verify user is not able to update his own email on his profile'],1,
at com.lenovo.qa.api.core.regression.accountManagement.BulkUserServiceFunctionalTestingSpec.Verify bulk user import with basic validation failures(BulkUserServiceFunctionalTestingSpec.groovy:268),['Verify bulk user import with basic validation failures'],1,
at com.lenovo.qa.api.lenovoPC.security.ppsService.securityMisconfigurations.PPSServiceHttpHeadersVerificationSpec.Verify that headers don't contain sensitive data(PPSServiceHttpHeadersVerificationSpec.groovy:20),"[""Verify that headers don't contain sensitive data""]",1,
at com.lenovo.qa.api.vrClassroom.smoke.SystemImageSpec.SMOKE: System images are NOT installed to organizations(SystemImageSpec.groovy:92),['SMOKE: System images are NOT installed to organizations'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.workflow.AlertsSpec.cleanupSpec(AlertsSpec.groovy:381),['AlertsSpec CLEANUP_SPEC'],1,
at com.lenovo.qa.api.core.regression.deviceRegistrationService.DeviceCertValidationSpec.X509 certificate for moved device from one org to another(DeviceCertValidationSpec.groovy:102),['X509 certificate for moved device from one org to another'],1,
at com.lenovo.qa.api.vrClassroom.smoke.accountManagement.OrgGroupSpec.SMOKE: Assign group during the organization creation(OrgGroupSpec.groovy:134),['SMOKE: Assign group during the organization creation'],1,
Caused by: java.lang.NullPointerException: Cannot invoke method contains() on null object,['SMOKE: Verify licenses can be assigned and unassigned to user'],1,
at com.lenovo.qa.api.core.regression.contentManagementService.ContentManagementServiceSpec.Verify pagination on documents and media(ContentManagementServiceSpec.groovy:253),['Verify pagination on documents and media'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.BulkUserServiceFunctionalTestingSpec.SMOKE: Verify bulk user edit without errors(BulkUserServiceFunctionalTestingSpec.groovy:228),['SMOKE: Verify bulk user edit without errors'],1,
at com.lenovo.qa.api.vrClassroom.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: User is able to assign and unassign devices to Admin(DeviceManagementServiceIntegrationTestingSpec.groovy:462),['SMOKE: User is able to assign and unassign devices to Admin'],1,
at com.lenovo.qa.api.core.smoke.configurationService.MSConfigServiceSpec.SMOKE: Verify merging mechanism for org config(subscription configs + default org config) after adding one more subscription ms org(MSConfigServiceSpec.groovy:114),['SMOKE: Verify merging mechanism for org config(subscription configs + default org config) after adding one more subscription ms org'],1,
at com.lenovo.qa.support.helpers.utils.Utils.waitFor(Utils.groovy:227),['SMOKE: Verify that Android feature app creates a new whitelist entry'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.ClientSpec.SMOKE: Verify that credentials of S2S communication client can be retrieved by LCP admin user(ClientSpec.groovy:123),['SMOKE: Verify that credentials of S2S communication client can be retrieved by LCP admin user'],1,
at com.lenovo.qa.api.thinkReality.smoke.applicationManagement.SystemImageSpec.SMOKE: Device could show information about the current OTA version on device(SystemImageSpec.groovy:470),['SMOKE: Device could show information about the current OTA version on device'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.UserGroupSpec.Verify that details of the users not in a group can be retrieved(UserGroupSpec.groovy:141),['Verify that details of the users not in a group can be retrieved'],1,
Suppressed: java.lang.NullPointerException,['Verify that homegroup can be found by groupId'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.ClientSpec.SMOKE: Verify that assigned operations can be performed as a S2S communication client (ClientSpec.groovy:150),['SMOKE: Verify that assigned operations can be performed as a S2S communication client '],1,
at com.lenovo.qa.api.thinkReality.smoke.accountManagement.OrganizationSettingsSpec.SMOKE: Verify that Org Admin is able to set PIN expiry period at Org level(OrganizationSettingsSpec.groovy:32),['SMOKE: Verify that Org Admin is able to set PIN expiry period at Org level'],1,
at com.lenovo.qa.api.lenovoPC.workflow.ModernPreloadHourlySpec.SMOKE: Verify that MP device has correct subscription code before and after part number assigned(ModernPreloadHourlySpec.groovy:27),['SMOKE: Verify that MP device has correct subscription code before and after part number assigned'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.permissionService.LenovoMSPOrganizationPermissionSpec.setupSpec(LenovoMSPOrganizationPermissionSpec.groovy:234),['LenovoMSPOrganizationPermissionSpec SETUP_SPEC'],1,
at com.lenovo.qa.api.smartOffice.smoke.deviceProfile.MSDeviceProfileSOSpec.SMOKE: Device profile contains related info during single assignment/unassignment licences-SmartOffice(MSDeviceProfileSOSpec.groovy:82),['SMOKE: Device profile contains related info during single assignment/unassignment licences-SmartOffice'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify that MSP admin gets notification during linking to lenovo MSP org(LenovoMSPOrganizationSpec.groovy:183),['SMOKE: Verify that MSP admin gets notification during linking to lenovo MSP org'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.usageStatistic.MSPUsageStatisticSpec.setupSpec(MSPUsageStatisticSpec.groovy:178),['MSPUsageStatisticSpec SETUP_SPEC'],1,
at com.lenovo.qa.api.thinkReality.smoke.deviceProfile.MSDeviceProfileTRSpec.MS Device can retrieve token to log into the portal with QR code(MSDeviceProfileTRSpec.groovy:91),['MS Device can retrieve token to log into the portal with QR code'],1,
at com.lenovo.qa.api.thinkReality.smoke.configurationService.DeviceConfigServiceSpec.SMOKE: Verify that admin could add package to config in org(DeviceConfigServiceSpec.groovy:1295),['SMOKE: Verify that admin could add package to config in org'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Get permission to resource type by subjectId(PermissionServiceSpec.groovy:209),['SMOKE: Get permission to resource type by subjectId'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Assign bulk permissions to a role(PermissionServiceSpec.groovy:472),['SMOKE: Assign bulk permissions to a role'],1,
at com.lenovo.qa.api.vrClassroom.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: Verify that Admin is able to see and manage devices which he created(DeviceManagementServiceIntegrationTestingSpec.groovy:431),['SMOKE: Verify that Admin is able to see and manage devices which he created'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Assign bulk permissions to a user(PermissionServiceSpec.groovy:417),['SMOKE: Assign bulk permissions to a user'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.DeviceGroupSpec.SMOKE: Verify that device can be associated to multiple groups which are sorted(DeviceGroupSpec.groovy:209),['SMOKE: Verify that device can be associated to multiple groups which are sorted'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.permissionService.MSPOrganizationPermissionSpec.SMOKE: Verify permission list for MSP tech managed(MSPOrganizationPermissionSpec.groovy:228),['SMOKE: Verify permission list for MSP tech managed'],1,
at com.lenovo.qa.api.lenovoPC.security.ppsService.securityMisconfigurations.OpenRedirectVerificationSpec.Verify that an attacker could not log in a user and redirect to a phishing site(OpenRedirectVerificationSpec.groovy:24),['Verify that an attacker could not log in a user and redirect to a phishing site'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.EmailNotificationsFunctionalTestingSpec.SMOKE: Verify bulk user edit emails(EmailNotificationsFunctionalTestingSpec.groovy:337),['SMOKE: Verify bulk user edit emails'],1,
at com.lenovo.qa.api.core.regression.accountManagement.UserServiceFunctionalTestingSpec.Verify that user is unable to delete another user(UserServiceFunctionalTestingSpec.groovy:1302),['Verify that user is unable to delete another user'],1,
at com.lenovo.qa.api.vrClassroom.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: VRC Admin is able to upload app to VR-S3 device that have called home to UDS but is not in an organization(DeviceManagementServiceIntegrationTestingSpec.groovy:303),['SMOKE: VRC Admin is able to upload app to VR-S3 device that have called home to UDS but is not in an organization'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.SubscriptionSupportFunctionalSpec.SMOKE: Lenovo Voice organization E2E scenario(SubscriptionSupportFunctionalSpec.groovy:1195),['SMOKE: Lenovo Voice organization E2E scenario'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.uipermissionService.MSPOrganizationUIPermissionSpec.setupSpec(MSPOrganizationUIPermissionSpec.groovy:281),['MSPOrganizationUIPermissionSpec SETUP_SPEC'],1,
at com.lenovo.qa.api.core.regression.accountManagement.SubscriptionSupportFunctionalSpec.Verify that Hodaka Subscription Admin can create Hodaka Service Support user(SubscriptionSupportFunctionalSpec.groovy:233),['Verify that Hodaka Subscription Admin can create Hodaka Service Support user'],1,
at com.lenovo.qa.api.core.regression.emailService.EmailServiceSpec.Verify rate-limiting feature for email sending - blocking 11th email sending(EmailServiceSpec.groovy:210),['Verify rate-limiting feature for email sending - blocking 11th email sending'],1,
at com.lenovo.qa.api.core.smoke.homegraphService.BulkAssociationSpec.Check bulk operations(BulkAssociationSpec.groovy:20),['Check bulk operations'],1,
at com.lenovo.qa.api.lenovoPC.regression.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.Verify user is able to update public key with any key format(DeviceManagementServiceIntegrationTestingSpec.groovy:33),['Verify user is able to update public key with any key format'],1,
Caused by: java.lang.NullPointerException: Cannot get property 'messages' on null object,['Verify that user can NOT be assigned a non invitedUserRole'],1,
at com.lenovo.qa.api.lenovoPC.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: UPE API for Service to Service communication with MP/UDS(DeviceManagementServiceIntegrationTestingSpec.groovy:269),['SMOKE: UPE API for Service to Service communication with MP/UDS'],1,
at com.lenovo.qa.api.core.regression.accountManagement.OrganizationServiceFunctionalTestingSpec.Verify that user cannot log in in disabled organization(OrganizationServiceFunctionalTestingSpec.groovy:1225),['Verify that user cannot log in in disabled organization'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.reccuringRevenueProxy.MSPOrganizationLicenceTransferSpec.SMOKE: Licenses can be assigned and unassigned to device on Manged org(MSPOrganizationLicenceTransferSpec.groovy:197),['SMOKE: Licenses can be assigned and unassigned to device on Manged org'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.workflow.AlertsSpec.setupSpec(AlertsSpec.groovy:366),['AlertsSpec SETUP_SPEC'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: LDI device with PK should be moved to default org after unclaiming and LDI device without PK should be removed from DPS after unclaiming(DeviceManagementServiceIntegrationTestingSpec.groovy:41),['SMOKE: LDI device with PK should be moved to default org after unclaiming and LDI device without PK should be removed from DPS after unclaiming'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.regression.accountManagement.MSPMngOrgCreationWithDifferentAuthSpec.Verify that MSP admin able to create managed org with OIDC authType(MSPMngOrgCreationWithDifferentAuthSpec.groovy:51),['Verify that MSP admin able to create managed org with OIDC authType'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.DeviceGroupSpec.SMOKE: Verify that multiple devices can be associated to multiple groups at a time(DeviceGroupSpec.groovy:234),['SMOKE: Verify that multiple devices can be associated to multiple groups at a time'],1,
at com.lenovo.qa.api.thinkReality.smoke.applicationManagement.SystemImageSpec.SMOKE: Verify that published system image could contain multiple applicability filters(SystemImageSpec.groovy:332),['SMOKE: Verify that published system image could contain multiple applicability filters'],1,
at com.lenovo.qa.api.core.smoke.configurationService.MSConfigServiceSpec.SMOKE: Device config contains related info for ms flow(MSConfigServiceSpec.groovy:140),['SMOKE: Device config contains related info for ms flow'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify that newly created free org can be linked to new customer with isLenovoMsp licences and get parent Lenovo MSP under subscription(LenovoMSPOrganizationSpec.groovy:171),['SMOKE: Verify that newly created free org can be linked to new customer with isLenovoMsp licences and get parent Lenovo MSP under subscription'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Verify RR client have roles to get solution config(PermissionServiceSpec.groovy:582),['SMOKE: Verify RR client have roles to get solution config'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.DeviceGroupSpec.SMOKE: Verify that device can be associated to multiple groups at a time(DeviceGroupSpec.groovy:168),['SMOKE: Verify that device can be associated to multiple groups at a time'],1,
at com.lenovo.qa.api.thinkReality.smoke.accountManagement.OrganizationSettingsSpec.SMOKE: User can set up HoloOne URL for the org(OrganizationSettingsSpec.groovy:65),['SMOKE: User can set up HoloOne URL for the org'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.UserGroupSpec.Verify that user can be removed from a group(UserGroupSpec.groovy:183),['Verify that user can be removed from a group'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.OrganizationServiceFunctionalTestingSpec.SMOKE: User can search labels by characters(OrganizationServiceFunctionalTestingSpec.groovy:922),['SMOKE: User can search labels by characters'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify that new commercial customer and order with lenovo msp offer can be created(LenovoMSPOrganizationSpec.groovy:401),['SMOKE: Verify that new commercial customer and order with lenovo msp offer can be created'],1,
at com.lenovo.qa.api.core.regression.accountManagement.UserServiceFunctionalTestingSpec.Verify that multiple portal roles cannot be assigned to a user(UserServiceFunctionalTestingSpec.groovy:1072),['Verify that multiple portal roles cannot be assigned to a user'],1,
at com.lenovo.qa.api.thinkReality.smoke.assetManagement.AssetManagementSpec.Asset thumbnail could be added and retrieved(AssetManagementSpec.groovy:799),['Asset thumbnail could be added and retrieved'],1,
at com.lenovo.qa.api.core.smoke.installerService.InstallerServiceSpec.Verify that installer Package Configuration File can be updated(InstallerServiceSpec.groovy:390),['Verify that installer Package Configuration File can be updated'],1,
at com.lenovo.qa.api.vrClassroom.regression.accountManagement.DeviceGroupSpec.SMOKE: Device Group - Device id is removed from device config after device has been deleted(DeviceGroupSpec.groovy:42),['SMOKE: Device Group - Device id is removed from device config after device has been deleted'],1,
at com.lenovo.qa.api.vrClassroom.smoke.partnerContent.PartnerContentSpec.SMOKE: Show partner content deployment progress in the device tray(PartnerContentSpec.groovy:166),['SMOKE: Show partner content deployment progress in the device tray'],1,
at com.lenovo.qa.api.core.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: Device display name populated with correct values during csv device creation(DeviceManagementServiceIntegrationTestingSpec.groovy:88),['SMOKE: Device display name populated with correct values during csv device creation'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify that new commercial org can be linked to LenovoMsp org and get parent Lenovo MSP under subscription(LenovoMSPOrganizationSpec.groovy:432),['SMOKE: Verify that new commercial org can be linked to LenovoMsp org and get parent Lenovo MSP under subscription'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.SubscriptionSupportFunctionalSpec.SMOKE: Verify list organizations returns correct organizations for SmartOffice admin(SubscriptionSupportFunctionalSpec.groovy:1650),['SMOKE: Verify list organizations returns correct organizations for SmartOffice admin'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify that already existed commercial org can be linked to new customer with isLenovoMsp licences and get parent Lenovo MSP under subscription(LenovoMSPOrganizationSpec.groovy:335),['SMOKE: Verify that already existed commercial org can be linked to new customer with isLenovoMsp licences and get parent Lenovo MSP under subscription'],1,
at com.lenovo.qa.api.vrClassroom.smoke.configurationService.DeviceConfigServiceSpec.SMOKE: Portal is able to update values for udc-vr-config(DeviceConfigServiceSpec.groovy:80),['SMOKE: Portal is able to update values for udc-vr-config'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify creation new Lenovo MSP admin and tech(LenovoMSPOrganizationSpec.groovy:66),['SMOKE: Verify creation new Lenovo MSP admin and tech'],1,
at com.lenovo.qa.api.core.smoke.recurringRevenueProxy.RecurringRevenueProxySmokeSpec.SMOKE: Verify RR client can get solution config(RecurringRevenueProxySmokeSpec.groovy:770),['SMOKE: Verify RR client can get solution config'],1,
Caused by: java.lang.NullPointerException: Cannot get property 'firstName' on null object,['SMOKE: Verify bulk user import CSV with user information including phone number'],1,
at com.lenovo.qa.api.thinkShield.regression.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.Verify that service support user does not have l_all_device role(DeviceManagementServiceIntegrationTestingSpec.groovy:773),['Verify that service support user does not have l_all_device role'],1,
Caused by: java.lang.NullPointerException: Cannot get property 'partNumber' on null object,['Verify part numbers are not disappears after call home'],1,
at com.lenovo.qa.api.core.regression.deviceRegistrationService.DeviceCertValidationSpec.X509 certificate for deleted device(DeviceCertValidationSpec.groovy:46),['X509 certificate for deleted device'],1,
at com.lenovo.qa.api.vrClassroom.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: VRC device can be claimed with alias sn after call-home(DeviceManagementServiceIntegrationTestingSpec.groovy:110),['SMOKE: VRC device can be claimed with alias sn after call-home'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.accountManagement.LenovoMSPOrganizationSpec.SMOKE: Verify that Lenovo MSP org can be converted from commercial org - without convert(LenovoMSPOrganizationSpec.groovy:60),['SMOKE: Verify that Lenovo MSP org can be converted from commercial org - without convert'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.permissionService.MSPOrganizationPermissionSpec.SMOKE: Verify permission list for MSP tech(MSPOrganizationPermissionSpec.groovy:130),['SMOKE: Verify permission list for MSP tech'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.EmailNotificationsFunctionalTestingSpec.SMOKE: Verify bulk user import emails(EmailNotificationsFunctionalTestingSpec.groovy:206),['SMOKE: Verify bulk user import emails'],1,
at com.lenovo.qa.api.thinkReality.smoke.configurationService.DeviceConfigServiceSpec.SMOKE: Added application can be updated(DeviceConfigServiceSpec.groovy:152),['SMOKE: Added application can be updated'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.reccuringRevenueProxy.MSPOrganizationLicenceTransferSpec.SMOKE: Verify MSP admin able to transfer licences(MSPOrganizationLicenceTransferSpec.groovy:64),['SMOKE: Verify MSP admin able to transfer licences'],1,
at com.lenovo.qa.api.lenovoPC.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: Verify that MP device has correct subscription code before and after part number assigned(DeviceManagementServiceIntegrationTestingSpec.groovy:293),['SMOKE: Verify that MP device has correct subscription code before and after part number assigned'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.SubscriptionSupportFunctionalSpec.SMOKE: ModernPreload organization E2E scenario(SubscriptionSupportFunctionalSpec.groovy:908),['SMOKE: ModernPreload organization E2E scenario'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.UserServiceFunctionalTestingSpec.SMOKE: Verify the global user export functionality(UserServiceFunctionalTestingSpec.groovy:883),['SMOKE: Verify the global user export functionality'],1,
at com.lenovo.qa.api.core.smoke.coreOrderService.OrderServiceSmokeSpec.SMOKE: Order-center-client is able to create customer and order on UDS for TR subscription(OrderServiceSmokeSpec.groovy:20),['SMOKE: Order-center-client is able to create customer and order on UDS for TR subscription'],1,
at com.lenovo.qa.api.core.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: Provision OTS zip file can be retrieved for Pending devices with deviceId(DeviceManagementServiceIntegrationTestingSpec.groovy:402),['SMOKE: Provision OTS zip file can be retrieved for Pending devices with deviceId'],1,
at com.lenovo.qa.api.thinkReality.workflow.DeviceQRCodeAuthorizationSpec.Device can retrieve token to log into the portal with QR code(DeviceQRCodeAuthorizationSpec.groovy:43),['Device can retrieve token to log into the portal with QR code'],1,
at com.lenovo.qa.api.thinkReality.smoke.configurationService.DeviceConfigServiceSpec.SMOKE: Application can be deleted from the device(DeviceConfigServiceSpec.groovy:102),['SMOKE: Application can be deleted from the device'],1,
at com.lenovo.qa.api.thinkReality.smoke.applicationManagement.SystemImageSpec.SMOKE: Verify that system image could contain multiple applicability filters(SystemImageSpec.groovy:226),['SMOKE: Verify that system image could contain multiple applicability filters'],1,
at com.lenovo.qa.api.core.regression.usageStatistics.UsageStatisticsSpec.Verify usage statistics CSV report content as TR sub admin for separate organization(UsageStatisticsSpec.groovy:90),['Verify usage statistics CSV report content as TR sub admin for separate organization'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Assign/un-assign role with multiple client scopes to/from a role(PermissionServiceSpec.groovy:356),['SMOKE: Assign/un-assign role with multiple client scopes to/from a role'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.UserServiceFunctionalTestingSpec.SMOKE: Verify that user can update his details via userUpdate API(UserServiceFunctionalTestingSpec.groovy:1191),['SMOKE: Verify that user can update his details via userUpdate API'],1,
at com.lenovo.qa.api.vrClassroom.smoke.accountManagement.OrgGroupSpec.SMOKE: Verify that org with MULTIPLE_GROUP_ASSIGMENT_SUPPORT - false assign to many groups(OrgGroupSpec.groovy:163),['SMOKE: Verify that org with MULTIPLE_GROUP_ASSIGMENT_SUPPORT - false assign to many groups'],1,
at com.lenovo.qa.api.core.smoke.homegraphService.HomegraphSpec.End to end homegraph service(HomegraphSpec.groovy:77),['End to end homegraph service'],1,
at com.lenovo.qa.api.vrClassroom.regression.partnerContent.PartnerContentSpec.Verify that Super Admin is able to see new version of recommended content(PartnerContentSpec.groovy:105),['Verify that Super Admin is able to see new version of recommended content'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.ClientSpec.SMOKE: Verify that S2S communication clients can be listed by user(ClientSpec.groovy:82),['SMOKE: Verify that S2S communication clients can be listed by user'],1,
at com.lenovo.qa.api.core.smoke.contentManagementService.ContentManagementServiceSpec.SMOKE: List structured contents(ContentManagementServiceSpec.groovy:53),['SMOKE: List structured contents'],1,
at com.lenovo.qa.api.vrClassroom.smoke.accountManagement.UserServiceFunctionalTestingSpec.SMOKE: User is able to bulk assign/unassign Devices to User(UserServiceFunctionalTestingSpec.groovy:36),['SMOKE: User is able to bulk assign/unassign Devices to User'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.reccuringRevenueProxy.MSPOrganizationLicenceTransferSpec.SMOKE: Get licence transfer statistic with transferred type(MSPOrganizationLicenceTransferSpec.groovy:115),['SMOKE: Get licence transfer statistic with transferred type'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.EmailNotificationsFunctionalTestingSpec.SMOKE: Verify resending invitation email(EmailNotificationsFunctionalTestingSpec.groovy:140),['SMOKE: Verify resending invitation email'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.SubscriptionSupportFunctionalSpec.SMOKE: Predictive Maintenance organization E2E scenario(SubscriptionSupportFunctionalSpec.groovy:497),['SMOKE: Predictive Maintenance organization E2E scenario'],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Assign/un-assign a role to/from a role(PermissionServiceSpec.groovy:194),['SMOKE: Assign/un-assign a role to/from a role'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.smoke.permissionService.MSPOrganizationPermissionSpec.SMOKE: Verify switch tenant permissions for MSP techs after assigning to managed orgs(MSPOrganizationPermissionSpec.groovy:263),['SMOKE: Verify switch tenant permissions for MSP techs after assigning to managed orgs'],1,
at com.lenovo.qa.api.lenovoDeviceManagement.workflow.DashboardSpec.setupSpec(DashboardSpec.groovy:447),['DashboardSpec SETUP_SPEC'],1,
at com.lenovo.qa.api.core.smoke.emailService.EmailServiceSmokeSpec.Verify email can be sent with only required fields(EmailServiceSmokeSpec.groovy:88),['Verify email can be sent with only required fields'],1,
at com.lenovo.qa.api.core.demoSolution.DemoSolutionSpec.Verify base Demo Solution functionality(DemoSolutionSpec.groovy:39),['Verify base Demo Solution functionality'],1,
at com.lenovo.qa.api.vrClassroom.smoke.partnerContent.PartnerContentSpec.SMOKE: View warning status if the deploy process of the partner content item fails(PartnerContentSpec.groovy:385),['SMOKE: View warning status if the deploy process of the partner content item fails'],1,
at com.lenovo.qa.api.core.regression.accountManagement.OrganizationServiceFunctionalTestingSpec.Org admin user cannot delete organization he exists(OrganizationServiceFunctionalTestingSpec.groovy:1286),['Org admin user cannot delete organization he exists'],1,
at com.lenovo.qa.support.helpers.utils.Utils.compareMaps(Utils.groovy:111),['Verify that field value with zero characters is treated as empty on org update'],1,
at com.lenovo.qa.api.core.smoke.deviceProfile.DeviceManagementServiceIntegrationTestingSpec.SMOKE: Device can finish registration after getting new provision OTS key(DeviceManagementServiceIntegrationTestingSpec.groovy:459),['SMOKE: Device can finish registration after getting new provision OTS key'],1,
at com.lenovo.qa.api.thinkReality.smoke.configurationService.DeviceConfigServiceSpec.SMOKE: Verify adding an option to customize idle timeout for devices on org level(DeviceConfigServiceSpec.groovy:240),['SMOKE: Verify adding an option to customize idle timeout for devices on org level'],1,
at com.lenovo.qa.api.core.regression.contentManagementService.ContentManagementServiceSpec.Verify pagination on structured content(ContentManagementServiceSpec.groovy:214),['Verify pagination on structured content'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.OrganizationServiceFunctionalTestingSpec.SMOKE: Verify that demo organization can be created with expiry date(OrganizationServiceFunctionalTestingSpec.groovy:1179),['SMOKE: Verify that demo organization can be created with expiry date'],1,
at com.lenovo.qa.api.core.smoke.accountManagement.UserCommercialLicensesSpec.SMOKE: Verify SAML auth type with COMMERCIAL organization can be created with mandatory fields in V3(UserCommercialLicensesSpec.groovy:184),['SMOKE: Verify SAML auth type with COMMERCIAL organization can be created with mandatory fields in V3'],1,
at com.lenovo.qa.api.lenovoDeviceIntelegence.smoke.deviceProfile.MSPOrganizationDeviceProfileSpec.SMOKE: Verify MSP tech and admin able to retrieve correct device list with x-cross-tenant = true (MSPOrganizationDeviceProfileSpec.groovy:46),['SMOKE: Verify MSP tech and admin able to retrieve correct device list with x-cross-tenant = true '],1,
at com.lenovo.qa.api.core.smoke.permissionService.PermissionServiceSpec.SMOKE: Order-center-client and order-service-client have required permissions and roles(PermissionServiceSpec.groovy:523),['SMOKE: Order-center-client and order-service-client have required permissions and roles'],1,
at com.lenovo.qa.api.core.regression.accountManagement.BulkUserServiceFunctionalTestingSpec.Check that import results are not shown if nothing is imported(BulkUserServiceFunctionalTestingSpec.groovy:35),['Check that import results are not shown if nothing is imported'],1,
at com.lenovo.qa.api.core.regression.accountManagement.SubscriptionSupportFunctionalSpec.Verify organization isn't exist by orgId and orgFakeSubId(SubscriptionSupportFunctionalSpec.groovy:331),"[""Verify organization isn't exist by orgId and orgFakeSubId""]",1,
